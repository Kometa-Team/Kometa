templates:

  separator:
    default:
      key: separator
      sep_style: orig
      collection_section: "00"
      url_poster_<<key>>: https://raw.githubusercontent.com/Kometa-Team/Default-Images/master/separators/<<sep_style>>/<<separator>>.jpg
      sort_prefix: "!"
      sort_title: <<sort_prefix>><<collection_section>>_!<<title>>
    optional:
      - use_separator
      - collection_mode
      - placeholder_tmdb_movie
      - placeholder_tvdb_show
      - placeholder_imdb_id
      - summary_<<key>>
      - name_<<key>>
      - key_name
      - translation_key
    conditionals:
      use_blank:
        default: true
        conditions:
          - placeholder_tmdb_movie.exists: true
            value: false
          - placeholder_tvdb_show.exists: true
            value: false
          - placeholder_imdb_id.exists: true
            value: false
    run_definition: <<use_separator>>
    collection_mode: <<collection_mode>>
    sort_title: <<sort_title>>
    tmdb_movie: <<placeholder_tmdb_movie>>
    tvdb_show: <<placeholder_tvdb_show>>
    imdb_id: <<placeholder_imdb_id>>
    blank_collection: <<use_blank>>
    url_poster: <<url_poster_<<key>>>>
    translation_key: <<translation_key>>
    key_name: <<key_name>>
    summary: <<summary_<<key>>>>
    name: <<name_<<key>>>>

  shared:
    conditionals:
      name_<<key>>:
        conditions:
          - dynamic: true
            <<translation_key>>_name.exists: true
            value: <<<<translation_key>>_name>>
          - dynamic: true
            key.not: other
            value: <<name_format>>
      summary_<<key>>:
        conditions:
          - dynamic: true
            <<translation_key>>_summary.exists: true
            value: <<<<translation_key>>_summary>>
          - dynamic: true
            key.not: other
            value: <<summary_format>>
      url_poster_<<key>>:
        conditions:
          - file_poster_<<key>>.exists: false
            file_poster.exists: false
            value: <<url_poster>>
      final_use:
        conditions:
          - use_<<key>>.exists: true
            value: <<use_<<key>>>>
          - use_all: false
            value: false
    default:
      collection_section: "00"
      key: <<mapping_name>>
      pre: "_"
      order: ""
      order_<<key>>: <<order>>
      schedule_<<key>>: <<schedule>>
      sort: <<title>>
      sort_prefix: "!"
      sort_title: <<sort_prefix>><<collection_section>><<pre>><<order_<<key>>>><<sort>>
      item_radarr_tag_<<key>>: <<item_radarr_tag>>
      item_sonarr_tag_<<key>>: <<item_sonarr_tag>>
      url_poster: https://raw.githubusercontent.com/Kometa-Team/Default-Images/master/<<image>>.jpg
      file_poster_<<key>>: <<file_poster>>
      url_background_<<key>>: <<url_background>>
      file_background_<<key>>: <<file_background>>
      visible_library_<<key>>: <<visible_library>>
      visible_home_<<key>>: <<visible_home>>
      visible_shared_<<key>>: <<visible_shared>>
      minimum_items_<<key>>: <<minimum_items>>
    optional:
      - use_<<key>>
      - allowed_libraries
      - collection_mode
      - visible_library
      - visible_home
      - visible_shared
      - item_radarr_tag
      - item_sonarr_tag
      - trakt_list
      - image
      - ignore_ids
      - ignore_imdb_ids
      - minimum_items
      - summary_format
      - name_format
      - key_name
      - translation_key
      - file_poster
      - url_background
      - file_background
      - limit
      - name_mapping
      - delete_collections_named
      - schedule
    run_definition:
      - <<final_use>>
      - <<use_<<key>>>>
      - <<allowed_libraries>>
    name_mapping: <<name_mapping>>
    translation_key: <<translation_key>>
    key_name: <<key_name>>
    summary: <<summary_<<key>>>>
    name: <<name_<<key>>>>
    limit: <<limit>>
    ignore_ids: <<ignore_ids>>
    ignore_imdb_ids: <<ignore_imdb_ids>>
    trakt_list: <<trakt_list>>
    ignore_blank_results: true
    collection_mode: <<collection_mode>>
    visible_library: <<visible_library_<<key>>>>
    visible_home: <<visible_home_<<key>>>>
    visible_shared: <<visible_shared_<<key>>>>
    item_radarr_tag: <<item_radarr_tag_<<key>>>>
    item_sonarr_tag: <<item_sonarr_tag_<<key>>>>
    sort_title: <<sort_title>>
    url_poster: <<url_poster_<<key>>>>
    file_poster: <<file_poster_<<key>>>>
    url_background: <<url_background_<<key>>>>
    file_background: <<file_background_<<key>>>>
    minimum_items: <<minimum_items_<<key>>>>
    delete_collections_named: <<delete_collections_named>>
    schedule: <<schedule_<<key>>>>

  trakt:
    optional:
      - trakt_list
    trakt_list: <<trakt_list>>

  imdb:
    optional:
      - imdb_list
    imdb_list: <<imdb_list>>

  imdb_award:
    optional:
      - award_filter
      - category_filter
      - winning
    imdb_award:
      event_id: <<event_id>>
      event_year: <<key>>
      award_filter: <<award_filter>>
      category_filter: <<category_filter>>
      winning: <<winning>>

  tmdb_person:
    default:
      url_poster: https://raw.githubusercontent.com/Kometa-Team/People-Images-<<style>>/master/<<key_name_first_letter>>/Images/<<key_encoded>><<extra>>.jpg
      url_poster_<<key>>: <<url_poster>>
      tmdb_person_offset_<<key>>: <<tmdb_person_offset>>
    optional:
      - tmdb_person
      - tmdb_person_offset
      - tmdb_birthday
    tmdb_person: <<tmdb_person>>
    tmdb_birthday: <<tmdb_birthday>>
    tmdb_person_offset: <<tmdb_person_offset_<<key>>>>
    delete_not_scheduled: true
    url_poster: <<url_poster_<<key>>>>
    conditionals:
      extra:
        default: ""
        conditions:
          - tmdb_person_offset.exists: true
            tmdb_person_offset.not: 0
            value: " (<<tmdb_person_offset_<<key>>>>)"

  smart_filter:
    default:
      sort_by: release.desc
      sort_by_<<key>>: <<sort_by>>
      limit_<<key>>: <<limit>>
      search_value: <<value>>
    optional:
      - search_term2
      - search_value2
      - limit
      - type
    smart_filter:
      sort_by: <<sort_by_<<key>>>>
      limit: <<limit_<<key>>>>
      type: <<type>>
      any:
        <<search_term>>: <<search_value>>
        <<search_term2>>: <<search_value2>>

  filter:
    default:
      sync_mode: sync
      sync_mode_<<key>>: <<sync_mode>>
      sort_by: release.desc
      sort_by_<<key>>: <<sort_by>>
      limit_<<key>>: <<limit>>
    optional:
      - limit
    smart_label:
      sort_by: <<sort_by_<<key>>>>
      limit: <<limit_<<key>>>>
      all:
        label: <<smart_label>>
    sync_mode: <<sync_mode_<<key>>>>
    plex_all: true
    filters:
      <<filter_term>>: <<value>>

  mdb_smart:
    default:
      sync_mode: sync
      sync_mode_<<key>>: <<sync_mode>>
      sort_by: release.desc
      sort_by_<<key>>: <<sort_by>>
      cache_builders: 1
    cache_builders: <<cache_builders>>
    smart_label: <<sort_by_<<key>>>>
    sync_mode: <<sync_mode_<<key>>>>
    mdblist_list: <<mdblist_list>>

  arr:
    default:
      key: <<mapping_name>>
      radarr_add_missing_<<key>>: <<radarr_add_missing>>
      sonarr_add_missing_<<key>>: <<sonarr_add_missing>>
      radarr_folder_<<key>>: <<radarr_folder>>
      sonarr_folder_<<key>>: <<sonarr_folder>>
      radarr_tag_<<key>>: <<radarr_tag>>
      sonarr_tag_<<key>>: <<sonarr_tag>>
      radarr_monitor_<<key>>: <<radarr_monitor>>
      radarr_upgrade_existing_<<key>>: <<radarr_upgrade_existing>>
      radarr_monitor_existing_<<key>>: <<radarr_monitor_existing>>
      sonarr_monitor_<<key>>: <<sonarr_monitor>>
      sonarr_upgrade_existing_<<key>>: <<sonarr_upgrade_existing>>
      sonarr_monitor_existing_<<key>>: <<sonarr_monitor_existing>>
      radarr_search_<<key>>: <<radarr_search>>
      sonarr_search_<<key>>: <<sonarr_search>>
    optional:
      - radarr_add_missing
      - sonarr_add_missing
      - radarr_folder
      - sonarr_folder
      - radarr_tag
      - sonarr_tag
      - radarr_monitor
      - radarr_upgrade_existing
      - radarr_monitor_existing
      - sonarr_monitor
      - sonarr_upgrade_existing
      - sonarr_monitor_existing
      - radarr_search
      - sonarr_search
    radarr_add_missing: <<radarr_add_missing_<<key>>>>
    sonarr_add_missing: <<sonarr_add_missing_<<key>>>>
    radarr_folder: <<radarr_folder_<<key>>>>
    sonarr_folder: <<sonarr_folder_<<key>>>>
    radarr_tag: <<radarr_tag_<<key>>>>
    sonarr_tag: <<sonarr_tag_<<key>>>>
    radarr_monitor: <<radarr_monitor_<<key>>>>
    radarr_upgrade_existing: <<radarr_upgrade_existing_<<key>>>>
    radarr_monitor_existing: <<radarr_monitor_existing_<<key>>>>
    sonarr_monitor: <<sonarr_monitor_<<key>>>>
    sonarr_upgrade_existing: <<sonarr_upgrade_existing_<<key>>>>
    sonarr_monitor_existing: <<sonarr_monitor_existing_<<key>>>>
    radarr_search: <<radarr_search_<<key>>>>
    sonarr_search: <<sonarr_search_<<key>>>>

  custom:
    default:
      sync_mode: sync
      sync_mode_<<key>>: <<sync_mode>>
      collection_order: custom
      collection_order_<<key>>: <<collection_order>>
      cache_builders: 1
      cache_builders_<<key>>: <<cache_builders>>
    collection_order: <<collection_order_<<key>>>>
    sync_mode: <<sync_mode_<<key>>>>
    cache_builders: <<cache_builders_<<key>>>>

  other_collection:
    default:
      collection_section: "00"
      pre: "_~"
    optional:
      - use_other
    run_definition: <<use_other>>
    sort_title: "!<<collection_section>><<pre>><<title>>"

  use_year_collections:
    conditionals:
      final_collection_section:
        default: <<collection_section>>
        conditions:
          - year_collection_section.exists: true
            value: <<year_collection_section>>
    default:
      collection_section: "00"
      key: <<mapping_name>>
      pre: "_"
      order: ""
      order_<<key>>: <<order>>
      sort_prefix: "!"
      sort_title: <<sort_prefix>><<final_collection_section>><<pre>><<order_<<key>>>><<title>>
    optional:
      - use_year_collections
    run_definition: <<use_year_collections>>
    sort_title: <<sort_title>>